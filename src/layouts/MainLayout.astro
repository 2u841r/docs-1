---
import generateToc from '~/util/generateToc';
import PageContent from '../components/PageContent/PageContent.astro';
import RightSidebar from '../components/RightSidebar/RightSidebar.astro';
import TableOfContents from '../components/RightSidebar/TableOfContents';
import { useTranslations } from '../i18n/util';
import { getGithubEditUrl } from '../util/getGithubEditUrl';
import { getNavLinks } from '../util/getNavLinks';
import BaseLayout from './BaseLayout.astro';

const { content = {} } = Astro.props;
// TODO: Remove use of `content.astro.headings`
const headings = Astro.props.headings ?? content.astro?.headings;
const t = useTranslations(Astro);
const { previous, next } = await getNavLinks(Astro);
const githubEditUrl = getGithubEditUrl(Astro);
const overview = t('rightSidebar.overview');
---

<BaseLayout {...Astro.props}>
	<RightSidebar slot="secondary-sidebar" {...{content, headings, githubEditUrl}} />
	<PageContent {...{content, previous, next}}>
		{
			headings && (
				<Fragment slot="before-article">
					<nav>
						<TableOfContents
							client:media="(max-width: 72em)"
							toc={generateToc(headings, overview)}
							labels={{
								onThisPage: t('rightSidebar.onThisPage'),
							}}
							isMobile={true}
						/>
					</nav>
				</Fragment>
			)
		}
		<Fragment slot="after-title"><slot name="header" /></Fragment>
		<slot />
		<script is:inline>
			// Smart code snippet updater (TODO)
			// Goal: Every `` code snippet that we use in Markdown could become an anchor link
			// automatically, without the user needing to do anything. It would need access to
			// some array of all valid references and their URLs. This could also work well as
			// a markdown remark component/replacement to happen at build time, but I'm less 
			// clear how that would work and mainly wanted to see if this was possible.
			for (const el of document.querySelectorAll('code')) {
				if (el.innerText === 'astro add') {
					const ahref = document.createElement("a");
					ahref.href = '/en/reference/cli/add/';
					el.replaceWith(ahref);
					ahref.appendChild(el);
				}
			}
		</script>
	</PageContent>
</BaseLayout>
