diff --git a/dist/index.js b/dist/index.js
index f7fb4209ffd57c4d6f794b4485cf16aa58ad7422..0f559b3a17ac0a9a78b5f7fc766b1213d8e5665c 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -14,6 +14,7 @@ import { getFileInfo, handleExtendsNotSupported, parseFrontmatter } from "./util
 const RAW_CONTENT_ERROR = "MDX does not support rawContent()! If you need to read the Markdown contents to calculate values (ex. reading time), we suggest injecting frontmatter via remark plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins";
 const COMPILED_CONTENT_ERROR = "MDX does not support compiledContent()! If you need to read the HTML contents to calculate values (ex. reading time), we suggest injecting frontmatter via rehype plugins. Learn more on our docs: https://docs.astro.build/en/guides/integrations-guide/mdx/#inject-frontmatter-via-remark-or-rehype-plugins";
 function mdx(mdxOptions = {}) {
+  let buildNum = 0;
   return {
     name: "@astrojs/mdx",
     hooks: {
@@ -63,11 +64,9 @@ function mdx(mdxOptions = {}) {
                 configResolved(resolved) {
                   importMetaEnv = { ...importMetaEnv, ...resolved.env };
                 },
-                async transform(_, id) {
+                async transform(code, id) {
                   if (!id.endsWith("mdx"))
                     return;
-                  const { fileId } = getFileInfo(id, config);
-                  const code = await fs.readFile(fileId, "utf-8");
                   const { data: frontmatter, content: pageContent } = parseFrontmatter(code, id);
                   const compiled = await mdxCompile(new VFile({ value: pageContent, path: id }), {
                     ...mdxPluginOpts,
diff --git a/dist/sample.mdx b/dist/sample.mdx
new file mode 100644
index 0000000000000000000000000000000000000000..3d82fa1ab6f89d75c0a3cba956cc514ee48b8dcd
--- /dev/null
+++ b/dist/sample.mdx
@@ -0,0 +1,8 @@
+---
+title: Use a CMS with Astro ${buildNum += 1}
+description: How to use a CMS to add content to Astro
+layout: ~/layouts/MainLayout.astro
+i18nReady: true
+---
+                  
+**Ready to connect a Headless CMS to your Astro project?** Follow one of our guides to integrate a CMS.
\ No newline at end of file